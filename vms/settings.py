"""
Django settings for vms project.

Generated by 'django-admin startproject' using Django 5.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

import os
from pathlib import Path
from datetime import timedelta

from common.utils import convert_string_bool
from rest_framework.permissions import IsAuthenticatedOrReadOnly

# from rest_framework.permissions
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

GOOGLE_CLIENT_ID = os.getenv("VITE_GOOGLE_CLIENT_ID")
GOOGLE_WORKSPACE_DOMAIN = os.getenv("GOOGLE_WORKSPACE_DOMAIN")

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv("SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = convert_string_bool(os.getenv("DEBUG", "False"))

# If you set DEBUG to False, you also need to properly set the ALLOWED_HOSTS setting.
# https://docs.djangoproject.com/en/5.1/ref/settings/#std-setting-ALLOWED_HOSTS
ALLOWED_HOSTS = [url.strip() for url in os.getenv("ALLOWED_HOSTS", "*").split(",")]

# Email configuration
EMAIL_PORT = os.getenv("EMAIL_PORT", 587)
EMAIL_HOST_USER = os.getenv("EMAIL_USER")
EMAIL_HOST_PASSWORD = os.getenv("EMAIL_PASSWORD")
DEFAULT_FROM_EMAIL = os.getenv("EMAIL_DEFAULT_FROM")
EMAIL_HOST = os.getenv("EMAIL_HOST", "smtp.gmail.com")
EMAIL_SUBJECT_PREFIX = os.getenv("EMAIL_SUBJECT_PREFIX")
EMAIL_USE_TLS = convert_string_bool(os.getenv("EMAIL_USE_TLS", "True"))
EMAIL_USE_SSL = convert_string_bool(os.getenv("EMAIL_USE_SSL", "False"))

# django-rest-framework
# https://www.django-rest-framework.org

REQUIRE_AUTH = convert_string_bool(os.getenv("REQUIRE_AUTH", True))
if REQUIRE_AUTH:
    auth_classes = ["knox.auth.TokenAuthentication"]
    perm_classes = ["rest_framework.permissions.IsAuthenticated"]
else:
    auth_classes = []
    perm_classes = ["rest_framework.permissions.IsAuthenticatedOrReadOnly"]

REST_FRAMEWORK = {
    "PAGE_SIZE": 25,
    "DEFAULT_FILTER_BACKENDS": [
        "django_filters.rest_framework.DjangoFilterBackend",
        "rest_framework.filters.SearchFilter",
    ],
    "DEFAULT_PAGINATION_CLASS": "app.ModelPagination.ModelPagination",
    "DEFAULT_AUTHENTICATION_CLASSES": auth_classes,
    "DEFAULT_PERMISSION_CLASSES": perm_classes,
}

# Do not enable JSON responses for 400 & 500 unhandled exceptions
# during dev
if not DEBUG:
    handler500 = "rest_framework.exceptions.server_error"
    handler400 = "rest_framework.exceptions.bad_request"

# Django-Rest-Knox
# https://jazzband.github.io/django-rest-knox/
KNOX_TOKEN_MODEL = "knox.AuthToken"
REST_KNOX = {
    "AUTO_REFRESH": True,
    "TOKEN_MODEL": "knox.AuthToken",
    "TOKEN_TTL": timedelta(minutes=15),
    "AUTO_REFRESH_MAX_TTL": timedelta(hours=1),
    "MIN_REFRESH_INTERVAL": 15,  # number of seconds
    "USER_SERIALIZER": "knox.serializers.UserSerializer",
}

# django-cor-headers
# https://github.com/adamchainz/django-cors-headers
# if True, overrides all other CORS setting
CORS_ALLOW_ALL_ORIGINS = convert_string_bool(os.getenv("CORS_ALLOW_ALL_ORIGINS", DEBUG))
if os.getenv("CORS_ALLOWED_ORIGINS"):
    CORS_ALLOWED_ORIGINS = [
        url.strip() for url in os.getenv("CORS_ALLOWED_ORIGINS").split(",")
    ]
else:
    CORS_ALLOWED_ORIGINS = []


# Application definition
INSTALLED_APPS = [
    "app.apps.AppConfig",
    "corsheaders",
    "rest_framework",
    "knox",
    "django_filters",
    "django.contrib.auth",
    "django.contrib.admin",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "django.contrib.contenttypes",
]

MIDDLEWARE = [
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "vms.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR.joinpath("templates")],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "vms.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql",
        "USER": os.getenv("POSTGRES_USER"),
        "NAME": os.getenv("POSTGRES_DATABASE"),
        "PORT": os.getenv("POSTGRES_PORT", 5432),
        "PASSWORD": os.getenv("POSTGRES_PASSWORD"),
        "HOST": os.getenv("POSTGRES_HOST", "database"),
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = os.getenv("TZ", "UTC")

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = "static/"

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"
